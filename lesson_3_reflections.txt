When would you want to create a remote repository rather than keeping all your work local?
	It allows safe storages in case your computer is stolen or breaks.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	Auto-pulls could create commits that don't compile or make sense logically.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Forks are a GitHub command that allows you to copy someone's repository and give them credit for their work. Clones are copies of repositories between GitHub and a remote location. Branches are what is pushed or pulled between remote and GitHub after code changes have been made.

What is the benefit of having a copy of the last known state of the remote stored locally?
	So you can keep track of how out of sync each repositories are over time, allow you to merge when appropriate.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	It would be harder to keep track of the versions, take up too much file space, and be impossible to "merge" different versions.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	Experimental changes should be contained in a separate branch to prevent breaking the master branch code. Then, if the code works it can be merged at a later time. Incremental changes can be commited to master without consequence.